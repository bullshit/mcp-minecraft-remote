name: Publish Container with Buildpacks

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.7.2

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build with buildpacks
        run: |
          pack build ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --builder paketobuildpacks/builder-jammy-base \
            --env NODE_ENV=production \
            --publish

      - name: Tag additional versions
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          BASE_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"

          echo "Tagging additional versions..."
          echo "$TAGS" | while IFS= read -r tag; do
            if [ -n "$tag" ] && [ "$tag" != "$BASE_IMAGE" ]; then
              echo "Tagging as: $tag"
              docker tag "$BASE_IMAGE" "$tag"
              docker push "$tag"
            fi
          done

      - name: Run security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: "sarif"
          output: "trivy-results.sarif"
        continue-on-error: true

      - name: Upload security results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
        continue-on-error: true

      - name: Test container
        if: github.event_name == 'pull_request'
        run: |
          echo "Testing container startup..."
          docker run -d --name mcp-test -p 3000:3000 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

          sleep 10

          if docker ps | grep -q mcp-test; then
            echo "✅ Container started successfully"
            docker logs mcp-test | head -10
          else
            echo "❌ Container failed to start"
            docker logs mcp-test
            exit 1
          fi

          docker stop mcp-test
          docker rm mcp-test
